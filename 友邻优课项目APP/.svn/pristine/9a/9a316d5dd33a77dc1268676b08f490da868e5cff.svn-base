//
//  ListenTraceViewController.m
//  ylyk
//
//  Created by 友邻优课 on 2017/3/16.
//  Copyright © 2017年 友邻优课. All rights reserved.
//

#import "YLYKListenTraceViewController.h"
#import "YLYKBaseTraceCell.h"
#import "YLYKNoteTraceCell.h"
#import "YLYKCourseTraceCell.h"
#import "YLYKTraceModel.h"
#import "NativeNetwork.h"
#import "YLYKHeaderView.h"
#import "MJExtension.h"
#import "YLYKPlayerViewController.h"
#import "CBLProgressHUD.h"
#import "NSStringTools.h"
#import "CourseViewController.h"
#import "WXApi.h"
#import "YLYKCourseModel.h"

@interface YLYKListenTraceViewController ()<UITableViewDelegate, UITableViewDataSource,ImageDelegate,CourseDelegate>
@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) NSMutableArray *traceArray;
@property (nonatomic, strong) NSArray *monthArray;
@property (nonatomic, strong) NSMutableArray *timeArr;
@property (nonatomic, assign) NSInteger totalLearnTime;
@property (nonatomic, strong) UIButton *bgView;
@end

@implementation YLYKListenTraceViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationController.navigationBar.translucent = NO;
    UIImage *image = [UIImage imageNamed:@"nav_back"];
    UIImage *rightImage = [UIImage imageNamed:@"nav_share"];
    image = [image imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];
    rightImage = [rightImage imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithImage:image
                                                                             style:UIBarButtonItemStyleDone
                                                                            target:self
                                                                            action:@selector(back)];
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithImage:rightImage
                                                                              style:UIBarButtonItemStyleDone
                                                                             target:self
                                                                             action:@selector(share)];
    self.navigationController.navigationBar.translucent = NO;
    self.navigationItem.title = @"学习轨迹";
    [self.navigationController setNavigationBarHidden:NO animated:YES];
    self.traceArray = [NSMutableArray array];
    self.endTime = [self getEndTime];
    [self getTrace];
}

- (void)createTableView
{
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT - 64)];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    self.tableView.backgroundColor = [UIColor colorWithRed:242/255.0 green:245/255.0 blue:246/255.0 alpha:1.0];
    YLYKHeaderView *headView = [[YLYKHeaderView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 100)];
    NSString *todayLearnTimeLabelStr = [self minuteFormatted:self.totalLearnTime];
    [headView.todayLearnTimeLabel setAttributedText:[self highlightString:@"分钟" inString:todayLearnTimeLabelStr]];
    if ([self.startTime isEqualToString: [self getStartTime]]) {
        NSDictionary *dict = [USER_INFO objectForKey:@"stat"];
        NSInteger learnTime = [[dict objectForKey:@"listened_time"] integerValue];
        headView.dateLabel.hidden = YES;
        NSString *totalLearnTimeLabelStr =  [NSString stringWithFormat:@"%ld小时", (learnTime / 60 / 60)];
        [headView.totalLearnTimeLabel setAttributedText:[self highlightString:@"小时" inString:totalLearnTimeLabelStr]];
        NSString *continuityDaysStr = [NSString stringWithFormat:@"%@天",[dict objectForKey:@"signin_period"]] ;
        [headView.continuityDays setAttributedText:[self highlightString:@"天" inString:continuityDaysStr]];
    } else {
        headView.dateLabel.hidden = YES;
        headView.dateTimeLabel.text =[NSString stringWithFormat:@"%@月%@日学习",self.month,self.day];
        headView.learnTimeView.hidden = YES;
        headView.continuityView.hidden = YES;
    }
    self.tableView.tableHeaderView = headView;
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 30)];
    label.text = @"没有更多学习记录";
    [label setFont:[UIFont systemFontOfSize:11]];
    label.textColor = [UIColor lightGrayColor];
    label.textAlignment = NSTextAlignmentCenter;
    label.backgroundColor = [UIColor colorWithRed:248/255.0 green:250/255.0 blue:251/255.0 alpha:1.0];
    self.tableView.tableFooterView = label;
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.view addSubview:self.tableView];
}

- (NSMutableAttributedString *)highlightString:(NSString *)str inString:(NSString *)string
{
    NSMutableAttributedString *noteStr = [[NSMutableAttributedString alloc] initWithString:string];
    NSRange redRange = NSMakeRange([[noteStr string] rangeOfString:str].location, [[noteStr string] rangeOfString:str].length);
    [noteStr addAttribute:NSForegroundColorAttributeName value:[UIColor blackColor] range:redRange];
    [noteStr addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:13] range:redRange];
    return noteStr;
}


- (void)getTrace
{
    NSDictionary *dict = [NSDictionary dictionaryWithObjectsAndKeys:self.startTime, @"start_time", self.endTime, @"end_time", @"100",@"limit",nil];
    [CBLProgressHUD showLoadingHUDInView:self.view];
    NSString *netStatus = [[NativeNetwork sharedInstance] getSystemNetworkState];
    [[NativeNetwork sharedInstance] getUserTraceById:USERID parameters:dict success:^(id responseObject) {
        NSArray *array = [self arrayWithJSONString:responseObject];
        for (NSDictionary *dic in array) {
            YLYKTraceModel *model = [YLYKTraceModel mj_objectWithKeyValues:dic];
            model.showType = TraceShowTypeCourse;
            if (model.listened_time) {
                self.totalLearnTime += model.listened_time;
            }
            [self.traceArray addObject:model];
        }
        if (array.count == 0) {
            [self creatErrorView];
            [CBLProgressHUD hideLoadingHUDInView:self.view];
        } else {
            [self getNoteTrace];
        }
    } failure:^(NSError *error) {
        if ([netStatus isEqualToString:@"notReachable"]) {
            [CBLProgressHUD showTextHUDInWindowWithText:@"无法连接至网络，请检查网络设置"];
            [CBLProgressHUD hideLoadingHUDInView:self.view];
            return;
        }
        [CBLProgressHUD hideLoadingHUDInView:self.view];
    }];
}

- (NSString *)getErrorCodeWithError:(NSError *)error {
    NSData *errmessageData = [error.userInfo objectForKey:@"com.alamofire.serialization.response.error.data"];
    NSString *errorString = [[NSString alloc] initWithData:errmessageData encoding:NSUTF8StringEncoding];
    NSDictionary *dict = [NSStringTools getDictionaryWithJsonstring:errorString];
    NSString *errorCode = [dict objectForKey:@"error_code"];
    return errorCode;
}

- (void)creatErrorView
{
    UIImageView *imageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"blank_page"]];
    imageView.center = CGPointMake(SCREEN_WIDTH *0.5, 200);
    [self.view addSubview:imageView];
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 30)];
    label.center = CGPointMake(SCREEN_WIDTH *0.5, 300);
    label.text = @"无学习记录";
    label.textAlignment = NSTextAlignmentCenter;
    [self.view addSubview:label];
}

- (void)getNoteTrace
{
    NSDictionary *parameters = [NSDictionary dictionaryWithObjectsAndKeys:self.startTime, @"start_time", self.endTime, @"end_time", USERID, @"user_id", @"100",@"limit",nil];
    [[NativeNetwork sharedInstance] getNoteList:parameters success:^(id responseObject) {
        NSArray *array = [self arrayWithJSONString:responseObject];
        for (NSDictionary *dic in array) {
            YLYKTraceModel *model = [YLYKTraceModel mj_objectWithKeyValues:dic];
            model.showType = TraceShowTypeNote;
            [self.traceArray addObject:model];
        }
        [CBLProgressHUD hideLoadingHUDInView:self.view];
        [self sortTraceByIntime];
    } failure:^(NSError *error) {
        [CBLProgressHUD hideLoadingHUDInView:self.view];
    }];
}

- (void)sortTraceByIntime
{
    NSMutableArray *timeArr = [[NSMutableArray alloc]init];
    // 时间戳-对象字典，将对象和其对应的时间戳字符串存入字典（哈希表）
    NSMutableDictionary *dateKeyArr = [[NSMutableDictionary alloc]init];
    //    NSMutableArray *dateKeyArr = [[NSMutableArray alloc] init];
    // 2.时间戳取出，并格式化处理
    for(YLYKTraceModel *model in self.traceArray) {
        // 时间戳转成时间对象用于排序
        NSDate  *date = [NSDate dateWithTimeIntervalSince1970:model.in_time];
        [timeArr addObject:date];
        // 时间戳转成时间戳字符串作为key,制作哈希表
        NSNumber *dataNum = [NSNumber numberWithLongLong:model.in_time];
        NSString *datekey = [dataNum stringValue];
        //        NSString *courseIdKey = [NSString stringWithFormat:@"%@",[model.course objectForKey:@"id"]];
        [dateKeyArr setObject:model forKey:datekey];
        //        [dateKeyArr addObject:model];
    }
    NSArray *orderedDateArray = [timeArr sortedArrayUsingComparator:^NSComparisonResult(NSDate *date1, NSDate *date2) {
        // 降序排序，最近的时间靠前
        return [date2 compare:date1];
    }];
    NSMutableArray *sortedAccounts = [[NSMutableArray alloc]init];
    NSDate *datekey = [[NSDate alloc]init];
    for (int i = 0; i<orderedDateArray.count; i++) {
        datekey = orderedDateArray[i];
        // 日期对象转换成时间戳字符串key
        NSString *datekeys = [NSString stringWithFormat:@"%lld", (long long)[datekey timeIntervalSince1970]];
        // 根据时间戳字符串key取对应的对象（哈希表）
        [sortedAccounts addObject:[dateKeyArr objectForKey:datekeys]];
        //        NSObject *obj = dateKeyArr[i];
        //        [sortedAccounts addObject:obj];
    }
    self.traceArray = sortedAccounts;
    [self removeTraceLessOneMin];
}

- (void)removeTraceLessOneMin
{
    NSMutableArray *array = [NSMutableArray arrayWithArray:self.traceArray];
    for (int i=0; i<self.traceArray.count; i++) {
        YLYKTraceModel *model = self.traceArray[i];
        
        if (model.listened_time && model.listened_time < 60) {
            [array removeObject:model];
        }
    }
    self.traceArray = array;
    [self createTableView];
}

- (NSString *)getStartTime
{
    NSCalendar *calendar = [NSCalendar currentCalendar];
    NSDate *now = [NSDate date];
    NSDateComponents *components = [calendar components:NSCalendarUnitYear | NSCalendarUnitMonth | NSCalendarUnitDay fromDate:now];
    NSDate *startDate = [calendar dateFromComponents:components];
    NSTimeZone *timeZone = [NSTimeZone timeZoneWithName:@"Asia/Shanghai"];
    NSInteger delta = [timeZone secondsFromGMT];
    NSString *timeSp = [NSString stringWithFormat:@"%ld", (long)[startDate timeIntervalSince1970] - delta];
    return timeSp;
}

- (NSString *)getEndTime
{
    NSInteger endTimeLength = [self.startTime integerValue] + 24 * 60 * 60;
    return [NSString stringWithFormat:@"%ld",(long)endTimeLength];
}

//- (void)registerCell
//{
//    [_tableView registerClass:[YLYKCourseTraceCell class] forCellReuseIdentifier:NSStringFromClass([YLYKCourseTraceCell class])];
//    [_tableView registerClass:[YLYKNoteTraceCell class] forCellReuseIdentifier:NSStringFromClass([YLYKNoteTraceCell class])];
//}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return  self.traceArray.count;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    self.tableView.rowHeight = UITableViewAutomaticDimension;
    self.tableView.estimatedRowHeight = 300;
    YLYKTraceModel *p = _traceArray[indexPath.row];
    if (p.showType == TraceShowTypeCourse) {
        
        return  100;
    } else
    {
        return self.tableView.rowHeight;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    YLYKTraceModel *p = _traceArray[indexPath.row];
    YLYKBaseTraceCell *cell = nil;
    static NSString *cellIdentifier = @"";
    cellIdentifier = p.cellIdentifier;
    cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    if([cellIdentifier isEqualToString:@"YLYKCourseTraceCell"]){
        if (cell == nil)
        {
            cell = [[YLYKCourseTraceCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
        }
    }else if([cellIdentifier isEqualToString:@"YLYKNoteTraceCell"]){
        if (cell == nil)
        {
            cell = [[YLYKNoteTraceCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
        }
    }
    cell.courseDelegate = self;
    cell.myDelegate = self;
    [cell setNeedsUpdateConstraints];
    [cell updateConstraintsIfNeeded];
    [cell setTraceModel:p];
    return cell;
}

- (void)open:(NSString *)courseId
{
    CourseViewController *courseVC = [[CourseViewController alloc] init];
    [courseVC openPlayerController:courseId resolver:^(id result) {
        
    } rejecter:^(NSString *code, NSString *message, NSError *error) {
        
    }];
}

- (void)change:(NSString *)courseId
{
    CourseViewController *courseVC = [[CourseViewController alloc] init];
    [courseVC openPlayerController:courseId resolver:^(id result) {
        
    } rejecter:^(NSString *code, NSString *message, NSError *error) {
        
    }];
}

- (void)share
{
    if ([WXApi isWXAppInstalled]) {
        UIWindow *window = [UIApplication sharedApplication].delegate.window;
        self.bgView  = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
        self.bgView.backgroundColor = [UIColor colorWithRed:43/255.0 green:45/255.0 blue:48/255.0 alpha:0.5];
        [self.bgView addTarget:self action:@selector(close) forControlEvents:UIControlEventTouchUpInside];
        [window addSubview:self.bgView];
        
        UIView *shareView = [[UIView alloc] initWithFrame:CGRectMake(8, SCREEN_HEIGHT - 190 - 8, SCREEN_WIDTH - 16, 190)];
        shareView.backgroundColor = [UIColor whiteColor];
        shareView.layer.masksToBounds = YES;
        shareView.layer.cornerRadius = 5.0;
        
        UIButton *btn1 = [UIButton buttonWithType:UIButtonTypeCustom];
        btn1.frame = CGRectMake(0, 0, shareView.frame.size.width, 70);
        [btn1 addTarget:self action:@selector(shareToWechat:) forControlEvents:UIControlEventTouchUpInside];
        [btn1 setTitle:@"分享给朋友" forState:UIControlStateNormal];
        [btn1.titleLabel setFont:[UIFont systemFontOfSize:14]];
        [btn1 setTitleColor:[UIColor colorWithRed:90/255.0 green:90/255.0 blue:90/255.0 alpha:1.0] forState:UIControlStateNormal];
        [btn1 setImageEdgeInsets:UIEdgeInsetsMake(0, -20, 0, 0)];
        [btn1 setImage:[UIImage imageNamed:@"wechat_icon"] forState:UIControlStateNormal];
        [shareView addSubview:btn1];
        
        UIView *lineView = [[UIView alloc] initWithFrame:CGRectMake(20, 69, shareView.frame.size.width - 40, 1)];
        [shareView addSubview:lineView];
        lineView.backgroundColor = [UIColor colorWithRed:200/255.0 green:200/255.0 blue:200/255.0 alpha:0.5];
        
        UIButton *btn2 = [UIButton buttonWithType:UIButtonTypeCustom];
        btn2.frame = CGRectMake(0, 70, shareView.frame.size.width, 70);
        [btn2 setTitle:@"分享到朋友圈" forState:UIControlStateNormal];
        [btn2 setImage:[UIImage imageNamed:@"timeline"] forState:UIControlStateNormal];
        [btn2 setTitleColor:[UIColor colorWithRed:90/255.0 green:90/255.0 blue:90/255.0 alpha:1.0] forState:UIControlStateNormal];
        [btn2.titleLabel setFont:[UIFont systemFontOfSize:14]];
        [btn2 setImageEdgeInsets:UIEdgeInsetsMake(0, -7, 0, 0)];
        [btn2 setTitleEdgeInsets:UIEdgeInsetsMake(0, 13, 0, 0)];
        [btn2 addTarget:self action:@selector(shareToWechat:) forControlEvents:UIControlEventTouchUpInside];
        [shareView addSubview:btn2];
        
        UIButton *btn3 = [UIButton buttonWithType:UIButtonTypeCustom];
        btn3.frame = CGRectMake(0, 140, shareView.frame.size.width, 50);
        [btn3 setImage:[UIImage imageNamed:@"icon_close"] forState:UIControlStateNormal];
        btn3.backgroundColor = [UIColor colorWithRed:248/255.0 green:250/255.0 blue:251/255.0 alpha:1];
        [btn3 addTarget:self action:@selector(close) forControlEvents:UIControlEventTouchUpInside];
        [shareView addSubview:btn3];
        
        [self.bgView addSubview:shareView];
    } else {
        [CBLProgressHUD showTextHUDInWindowWithText:@"未安装微信"];
    }
}

- (void)shareToWechat:(UIButton *)btn
{
    NSString *str = self.startTime;//时间戳
    NSTimeInterval time=[str doubleValue]+28800;//因为时差问题要加8小时 == 28800 sec
    NSDate *detaildate=[NSDate dateWithTimeIntervalSince1970:time];
    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
    [dateFormatter setDateFormat:@"yyyyMMdd"];
    NSString *currentDateStr = [dateFormatter stringFromDate: detaildate];
    NSString *baseURL = @"http://m.youlinyouke.com/share/user/";
    WXMediaMessage *message =  [WXMediaMessage message];
    NSString *todayLearnTimeLabelStr = [self minuteFormatted:self.totalLearnTime];
    
    if ([self.startTime isEqualToString: [self getStartTime]]) {
        message.title = [NSString stringWithFormat:@"我今天在友邻优课学习了%@。学无用的英文，做自由的灵魂。",todayLearnTimeLabelStr];
    } else {
        message.title = [NSString stringWithFormat:@"我%@月%@日在友邻优课学习了%@。学无用的英文，做自由的灵魂。",self.month,self.day,todayLearnTimeLabelStr];
    }
    message.description = [NSString stringWithFormat:@"友邻优课，终身学习者的英语课堂"];
    [message setThumbImage:[UIImage imageNamed:@"wx_share_image"]];
    WXWebpageObject *obj = [WXWebpageObject object];
    obj.webpageUrl = [NSString stringWithFormat:@"%@%@/trace.html?date=%@",baseURL,USERID,currentDateStr];
    message.mediaObject = obj;
    SendMessageToWXReq *req = [[SendMessageToWXReq alloc] init];
    req.message = message;
    req.bText = NO;
    
    if ([btn.titleLabel.text isEqualToString:@"分享给朋友"]) {
        req.scene = WXSceneSession;
        [WXApi sendReq:req];
    } else if([btn.titleLabel.text isEqualToString:@"分享到朋友圈"]){
        req.scene = WXSceneTimeline;
        [WXApi sendReq:req];
    }
}


- (void)close
{
    [self.bgView removeFromSuperview];
}

- (void)back
{
    [self.navigationController popViewControllerAnimated:YES];
}
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:NO animated:animated];
}

- (NSArray *)arrayWithJSONString:(NSString *)aJSONString
{
    NSAssert([aJSONString isKindOfClass:[NSString class]], @"aJSONString is illegal");
    NSData *aJSONData = [aJSONString dataUsingEncoding:NSUTF8StringEncoding];
    id aJSONObject = [NSJSONSerialization JSONObjectWithData:aJSONData
                                                     options:NSJSONReadingAllowFragments
                                                       error:nil];
    return [aJSONObject isKindOfClass:[NSArray class]] ? aJSONObject : nil;
}

- (NSString *)timeFormatted:(NSInteger)totalSeconds
{
    NSInteger seconds = totalSeconds % 60;
    NSInteger minutes = totalSeconds / 60;
    return [NSString stringWithFormat:@"%02ld:%02ld",(long)minutes, (long)seconds];
}

- (NSString *)minuteFormatted:(NSInteger)totalSeconds
{
    NSInteger minutes = totalSeconds / 60;
    return [NSString stringWithFormat:@"%ld分钟",(long)minutes];
}


- (NSArray *)monthArray
{
    if (!_monthArray) {
        _monthArray = @[@"Jan", @"Feb", @"Mar", @"Apr", @"May", @"Jun", @"Jul", @"Aug", @"Sep", @"Oct", @"Nov", @"Dec"];
    }
    return _monthArray;
}

@end

