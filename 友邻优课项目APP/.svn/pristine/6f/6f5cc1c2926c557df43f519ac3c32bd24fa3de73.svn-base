package com.reactutils.request;

import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.bridge.ReadableNativeMap;

import org.json.JSONArray;
import org.json.JSONObject;

import static com.reactutils.request.YLBaseService.DELETE;
import static com.reactutils.request.YLBaseService.GET;
import static com.reactutils.request.YLBaseService.POST;
import static com.reactutils.request.YLBaseService.PUT;

/**
 * Created by xyb on 2017/4/19.
 */

public class YLAddressModule extends ReactContextBaseJavaModule {


    private YLBaseService service;

    public YLAddressModule(ReactApplicationContext reactContext) {
        super(reactContext);
        service = new YLBaseService(reactContext.getApplicationContext());
    }

    @Override
    public String getName() {
        return null;
    }


    /**
     * 获取收货地址列表
     *
     * @param
     * @param promise
     */
    @ReactMethod
    public void getAddressList(Promise promise) {
        try {
            JSONObject jsonObject = new JSONObject();// 主体json
            JSONObject body = new JSONObject();// 主体json

            JSONObject query = new JSONObject();// 参数

            JSONArray url = new JSONArray();//url 数组

            url.put("address");

            jsonObject.put("type", GET);
            jsonObject.put("url", url);
            jsonObject.put("query", query);
            jsonObject.put("body", body);

            service.baseService(promise, jsonObject);

        } catch (Exception e) {
            e.printStackTrace();
            promise.reject(e);
        }
    }

    /**
     * 创建新的收货地址
     *
     * @param addressJson 地址json
     * @param promise
     */
    @ReactMethod
    public void createAddress(ReadableMap addressJson, Promise promise) {
        try {
            String nativeString = service.getNativeString((ReadableNativeMap) addressJson);

            JSONObject jsonObject = new JSONObject();// 主体json
            JSONObject body = new JSONObject(nativeString);// 主体json

            JSONObject query = new JSONObject();// 参数

            JSONArray url = new JSONArray();//url 数组

            url.put("address");

            jsonObject.put("type", POST);
            jsonObject.put("url", url);
            jsonObject.put("query", query);
            jsonObject.put("body", body);

            service.baseService(promise, jsonObject);

        } catch (Exception e) {
            e.printStackTrace();
            promise.reject(e);
        }
    }

    /**
     * 修改指定的收货地址
     *
     * @param address_id  地址标签id
     * @param addressJson 修改地址的 json
     */
    @ReactMethod
    public void updateAddress(String address_id, ReadableMap addressJson, Promise promise) {
        try {

            String nativeString = service.getNativeString((ReadableNativeMap) addressJson);
            JSONObject jsonObject = new JSONObject();// 主体json
            JSONObject body = new JSONObject(nativeString);// 主体json

            JSONObject query = new JSONObject();// 参数

            JSONArray url = new JSONArray();//url 数组

            url.put("address");
            url.put(address_id);

            jsonObject.put("type", PUT);
            jsonObject.put("url", url);
            jsonObject.put("query", query);
            jsonObject.put("body", body);

            service.baseService(promise, jsonObject);

        } catch (Exception e) {
            e.printStackTrace();
            promise.reject(e);
        }
    }

    /**
     * 删除指定的收货地址
     *
     * @param address_id 删除的地址id
     */
    @ReactMethod
    public void deleteAddress(String address_id, Promise promise) {
        try {
            JSONObject jsonObject = new JSONObject();// 主体json
            JSONObject body = new JSONObject();// 主体json

            JSONObject query = new JSONObject();// 参数

            JSONArray url = new JSONArray();//url 数组

            url.put("address");
            url.put(address_id);

            jsonObject.put("type", DELETE);
            jsonObject.put("url", url);
            jsonObject.put("query", query);
            jsonObject.put("body", body);

            service.baseService(promise, jsonObject);

        } catch (Exception e) {
            e.printStackTrace();
            promise.reject(e);
        }
    }


}
