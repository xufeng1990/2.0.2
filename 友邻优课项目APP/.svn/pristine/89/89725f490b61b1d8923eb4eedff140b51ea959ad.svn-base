/**
 * Created by 艺术家 on 2017/3/9.
 * page: 个人资料
 */

import React, { Component } from 'react';
import {
    Text,
    View,
    Image,
    TextInput,
    StyleSheet,
    Alert,
    Dimensions,
    NativeModules,
    Platform,
    TouchableOpacity,
    DeviceEventEmitter,
    NativeEventEmitter
} from 'react-native';
import ActionSheet from '@yfuks/react-native-action-sheet';
import DateTimePicker from 'react-native-modal-datetime-picker';
import * as RnNativeModules from "../../configs/RnNativeModules.js";
import  styles from "../../common/styles.js";
import  Util from  "../../common/util.js";
import Enums from "../../common/enums.js";
import Icon from "../../common/Icon.js";
import Service from '../../configs/Service.js';

import Cell from "../../component/Cells/Cell.js";
import  Header from "../../component/HeaderBar/HeaderBar.js";
import About from "./About.js"

var LoginEvents = NativeModules.LoginEvent;
const myLoginEvent = new NativeEventEmitter(LoginEvents);
var loginSubscription;

var LogoutEvents = NativeModules.LogoutEvent;
const myLogoutEvent = new NativeEventEmitter(LogoutEvents);
var logoutSubscription;

const loginOut = NativeModules.BridgeNative;
var service = Service.service;
export default class Setting extends Component{
    constructor(props){
        super(props);
        this.state={
            id: 60,
            mobilePhone: "",
            cacheSize:"",
            userInfo: {},

        }
    }

    componentWillMount(){
        let userInfo = this.props.userInfo;

         RnNativeModules.getCacheSize().then((cacheSize)=>{
            this.setState({
                cacheSize: cacheSize,
                mobilePhone: userInfo.mobilephone||"去绑定",
                userInfo: userInfo
            })
        })

        loginSubscription = myLoginEvent.addListener('LoginSuccess',(reminder)=>{
             console.log(reminder.LoginSuccess + "loginsuccessphonenumber");
            this.setState({
                mobilePhone:reminder.LoginSuccess
            })
    });

    }

    componentDidMount(){
         DeviceEventEmitter.addListener('mobilephone',(data)=>{
                alert(data)
        })

    }
    componentWillUnmount(){
    this.logoutSubscription && this.logoutSubscription.remove();
    DeviceEventEmitter.emit('showProfileTabBar','1');
    // this.loginSubscription = this.loginSubscription.remove();
}

    //返回
    _backFun =()=>{
        this.props.navigator.pop();
        RnNativeModules.hideTabBar('show');

    };

    //修改手机
    _inputPhone(){
        RnNativeModules.mobilePhone();

    }

    //意见反馈
    _feedback(){
        Util.alert({
             msg: "请在需要反馈的页面摇一摇"
        })
    }

    //清理缓存
    _clearCache(){
       RnNativeModules.clearCache();
       this.setState({
           cacheSize: "0.00MB"
       })
    }

    //关于我们
    _about(){
        this.props.navigator.push({
            component: About,
        })
    }

    //注销登录
    _signOut(){

        Util.alert({
            msg: "注销后已下载的课程将被清空，确定要注销吗？",
            okFun: ()=>{
                RnNativeModules.hideTabBar('show');
                loginOut.logout();
                logoutSubscription = myLogoutEvent.addListener('LogoutSuccess',(reminder)=>{
                  console.log('新注销成功' + reminder.LogoutSuccess )
                      if (reminder.LogoutSuccess) {
                            DeviceEventEmitter.emit('refreshData','1');
                            DeviceEventEmitter.emit('refresh', '1');
                            DeviceEventEmitter.emit('refreshProfileView');
                            this.props.navigator.pop();
                      }
                    })
            }
        })

    }

    _faq(){

    }

    render(){
        let cellsData = this.state;
        return(
            <View  style={[styles.bgGrey,styles.primary]} >
                <Header backFun={this._backFun} title={"设置"} />
                <View style={[styles.bgWhite,styles.section]}>
                    <Cell tag={"绑定手机"} content={this.state.mobilePhone+""} cellPull={true} cellLast={true}
                          cellFun={()=>{this._inputPhone()}} />
                </View>
                <View style={[styles.bgWhite,styles.section]}>
                    <Cell tag={"常见问题"} content={this.state.job}
                          cellPull={true} cellFun={()=>{this._faq()}}/>
                    <Cell tag={"意见反馈"} content={this.state.college} cellPull={true}
                          cellFun={()=>{this._feedback()}} />

                    <Cell tag={"清理缓存"} content={this.state.cacheSize} cellPull={true} cellLast={true}
                          cellFun={()=>{this._clearCache()}} />
                </View>

                <View style={[styles.bgWhite,styles.section]}>
                    <Cell tag={"关于我们"} cellPull={true} cellLast={true}
                          cellFun={()=>{this._about()}} />
                </View>

                <TouchableOpacity activeOpacity ={1}
                    style={[styles.bgWhite,styles.section,styles.alignCenter,{height:52}]}
                    onPress={()=>{
                        this._signOut();
                    }}
                >
                    <Text style={[styles.text16,styles.textCenter]} >
                        注销登录
                    </Text>
                </TouchableOpacity>
            </View>
        )
    }
}


var pageStyles = StyleSheet.create({
    topContainer:{
        height: 163,
        paddingTop: 10

    },
    courseName:{
        marginTop: 8,
    }
});
